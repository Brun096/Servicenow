var APMProfileManagement = Class.create();
APMProfileManagement.prototype = Object.extendsObject(AbstractAjaxProcessor, {

	// ---------Lookup Select Box managment-------
	//* item_option_new
	//* type=18^variable_set=b50adec1db2c2010d936320a689619e4

	getArea: function (application) {
		//get area reference qual. 	Lookup Select Box
		var area = [];
		var ga = new GlideAggregate('u_apm_profile_hierarchy');
		ga.addQuery('u_application', application);
		ga.addAggregate('COUNT', 'u_area');
		ga.query();
		while (ga.next()) {
			area.push(ga.getValue('u_area'));
		}
		var id = [];
		for (var i = 0, z = area.length; i < z; i++) {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addQuery('u_application', application);
			gr.addQuery('u_area', area[i]);
			gr.setLimit(1);
			gr.query();
			gr.next() ? id.push(gr.getUniqueValue()) : '';
		}
		return id;
	},


	getApplication: function () {
		//get Application reference qual. 	Lookup Select Box
		var application = [];
		var gra = new GlideAggregate('u_apm_profile_hierarchy');
		gra.addAggregate('COUNT', 'u_application');
		gra.query();
		while (gra.next()) {
			application.push(gra.getValue('u_application'));
		}
		var id = [];
		for (var i = 0, z = application.length; i < z; i++) {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addQuery('u_application', application[i]);
			gr.setLimit(1);
			gr.query();
			gr.next() ? id.push(gr.getUniqueValue()) : '';
		}
		return id;
	},
	getAppUserStatus: function () {
		var user = this.getParameter('user');
		var grUser = new GlideRecord('sys_user');
		grUser.get(user);
		var userName = grUser.getValue('user_name');
		var grProfile = new GlideRecord('u_apm_active_profiles');
		grProfile.addQuery('u_user_name', userName);
		grProfile.query();
		return grProfile.next() ? grProfile.u_user_status : '';
	},
	getProcess: function (area, application) {
		//get process reference qual. 	Lookup Select Box
		var id = [];
		var process = [];
		var ga = new GlideAggregate('u_apm_profile_hierarchy');
		ga.addEncodedQuery('u_area=' + area + '^u_application=' + application);
		ga.addAggregate('COUNT', 'u_process');
		ga.query();
		while (ga.next()) {
			process.push(ga.getValue('u_process'));
		}
		for (var i = 0, z = process.length; i < z; i++) {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addQuery('u_application', application);
			gr.addQuery('u_process', process[i]);
			gr.setLimit(1);
			gr.query();
			gr.next() ? id.push(gr.getUniqueValue()) : '';
		}
		return id;
	},

	getSProcess: function (area, process, application) {
		//get Sub Process reference qual. 	Lookup Select Box
		var id = [];
		var arraysprocess = [];
		var gr = new GlideRecord('u_apm_profile_hierarchy');
		gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application);
		gr.query();
		while (gr.next()) {
			if (arraysprocess.indexOf(gr.getDisplayValue('u_subprocess')) === -1) {
				id.push(gr.getUniqueValue());
				arraysprocess.push(gr.getDisplayValue('u_subprocess'));
			}
		}
		return id;
	},

	getProfile: function (area, process, application, subprocess, action, reqfor) {
		//get role reference qual. 	Lookup Select Box
		var id = [];
		var arraysprofile = [];
		var arrayrole = [];

		//get userid
		var grUser = new GlideRecord('sys_user');
		grUser.get(reqfor);
		var userID = grUser.getDisplayValue('user_name');

		if ((action != 'remove_all') && (action != 'replace')) {
			if ((action == 'delete') && ((application == 'spmat') || (application == 'dms'))) {
				var grH = new GlideRecord('u_apm_profile_hierarchy');
				grH.addEncodedQuery('u_application=' + application);
				grH.query();
				//gs.info('test_m_m ent'+grH.getEncodedQuery());
				while (grH.next()) {
					if (arraysprofile.indexOf(grH.getDisplayValue('u_functional_role')) === -1) {
						id.push(grH.getUniqueValue());
						arraysprofile.push(grH.getDisplayValue('u_functional_role'));
					}
				}
			}
			//get role for a specific user
			var grAP = new GlideRecord('u_apm_active_profiles');
			grAP.addEncodedQuery('u_application=' + application + '^u_user_name=' + userID);
			grAP.query();
			while (grAP.next()) {
				if (arrayrole.indexOf(grAP.getDisplayValue('u_functional_role')) === -1) {
					arrayrole.push(grAP.getDisplayValue('u_functional_role'));
				}
			}

			if (action == 'create') {
				var gr = new GlideRecord('u_apm_profile_hierarchy');
				gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_subprocess=' + subprocess); //+'u_functional_roleNOT LIKEE'+arrayrole
				gr.query();
				//gs.info('test_m_m '+gr.getEncodedQuery());
				while (gr.next()) {
					if (arraysprofile.indexOf(gr.getDisplayValue('u_functional_role')) === -1) {
						//if(arrayrole.indexOf(gr.getDisplayValue('u_functional_role')) === -1){ 
						id.push(gr.getUniqueValue());
						arraysprofile.push(gr.getDisplayValue('u_functional_role'));
						//}
					}
				}
			}
			if (action == 'delete') {
				var grH = new GlideRecord('u_apm_profile_hierarchy');
				grH.addEncodedQuery('u_functional_roleIN' + arrayrole); //+'^u_area='+area+'^u_application='+application+'^u_process='+process+'^u_subprocess='+subprocess
				grH.query();
				//gs.info('test_m_ '+grH.getEncodedQuery());
				while (grH.next()) {
					if (arraysprofile.indexOf(grH.getDisplayValue('u_functional_role')) === -1) {
						id.push(grH.getUniqueValue());
						arraysprofile.push(grH.getDisplayValue('u_functional_role'));
					}
				}
			}
		} else {

			var grAP = new GlideRecord('u_apm_active_profiles');
			grAP.addEncodedQuery('u_user_name=' + userID + '^u_remove_all_func=1');
			grAP.query();
			while (grAP.next()) {
				if (arrayrole.indexOf(grAP.getDisplayValue('u_functional_role')) === -1) {
					arrayrole.push(grAP.getDisplayValue('u_functional_role'));
				}
			}

			//var roleOne=gs.getProperty('(APM) Remove All exception role 1');
			//var roletwo=gs.getProperty('(APM) Remove All exception role 2');
			//var rolethree=gs.getProperty('(APM) Remove All exception role 3');

			var grH = new GlideRecord('u_apm_profile_hierarchy');
			grH.addEncodedQuery('u_functional_roleIN' + arrayrole);

			grH.query();
			while (grH.next()) {
				if (arraysprofile.indexOf(grH.getDisplayValue('u_functional_role')) === -1) {
					id.push(grH.getUniqueValue());
					arraysprofile.push(grH.getDisplayValue('u_functional_role'));
				}
			}
		}
		return id;
	},
	getSegregation: function () {
		var application = this.getParameter('application');
		var area = this.getParameter('area');
		var process = this.getParameter('process');
		var functionalRole = this.getParameter('functional_role');
		var obj = { result: '', message: '' };
		var grH = new GlideRecord('u_apm_profile_hierarchy');
		grH.addEncodedQuery('u_application=' + application + '^u_area=' + area + '^u_process=' + process + '^u_functional_role=' + functionalRole);
		grH.query();
		obj.result = grH.next() && grH.u_segregations == 'Company' ? 'true' : 'false';
		obj.message = gs.getMessage('(APM) SAP IP0-segregation note field');
		return JSON.stringify(obj);
	},
	getRequestedFor: function () {
		var aggregate = [];
		var grAPM = new GlideAggregate('u_apm_active_profile_reporting');
		grAPM.addQuery('user_u_saipem_active', 'false');
		grAPM.addAggregate('COUNT', 'user_sys_id');
		grAPM.query();
		while (grAPM.next()) {
			aggregate.push(grAPM.getValue('user_sys_id'));
		}
		var result = [];
		var grUser = new GlideAggregate('sys_user');
		grUser.addAggregate('COUNT', 'sys_id');
		grUser.addQuery('sys_id', 'IN', aggregate + '').addOrCondition('u_saipem_active', 'true');
		grUser.query();
		while (grUser.next()) {
			result.push(grUser.getValue('sys_id'));
		}
		return 'sys_idIN' + result;
	},
	SegregationNation: function (application, action, APM_requested_for, profile) {
		//auto populate segregation nation without duplicate
		var id = [];
		var appoArraySIDAC = [];

		if (action == 'create') {
			var grSegr = new GlideRecord('u_apm_segregations');
			grSegr.addQuery('u_application', application);
			grSegr.query();
			while (grSegr.next()) {
				if (appoArraySIDAC.indexOf(grSegr.getDisplayValue('u_value_code')) === -1) {
					appoArraySIDAC.push(grSegr.getDisplayValue('u_value_code'));
					id.push(grSegr.getUniqueValue());
				}
			}
		} else {
			var grUser = new GlideRecord('sys_user');
			grUser.get(APM_requested_for);
			var grAP = new GlideAggregate('u_apm_active_profiles');
			grAP.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_application=' + application);
			grAP.addAggregate('COUNT', 'u_low');
			grAP.query();
			while (grAP.next()) {
				var grSR = new GlideRecord('u_apm_segregations');
				grSR.addEncodedQuery('u_application=' + application + '^u_value_code=' + grAP.u_low);
				grSR.query();
				while (grSR.next()) {
					if (appoArraySIDAC.indexOf(grSR.getDisplayValue('u_value_code')) === -1) {
						appoArraySIDAC.push(grSR.getDisplayValue('u_value_code'));
						id.push(grSR.getUniqueValue());
					}
				}
			}
		}
		//gs.info('test_m_m '+id.length);
		return id;
	},

	SegregationAuto: function (area, process, application, subprocess, profile, action, APM_requested_for, apm_segregation_string, apm_nation_segregation, type) {
		//get Segregation reference qual. 	Lookup Select Box
		// gs.info('test_m_ pd 185 '+application);
		//gs.info('@ - ' +'\narea: '+area +'\nprocess: '+ process +'\napplication: '+ application +'\nsubprocess: '+ subprocess +'\nprofile: '+ profile +'\napm_naiton_segregation: '+ apm_nation_segregation +'\naction: '+ action +'\nAPM_requested: '+ APM_requested_for + '\napm_segregation_string: ' + apm_segregation_string)
		var id = [];
		if (action == 'create') {
			//gs.info('test_m_ pd 186 '+application);
			if (application == 'pws') {
				var gr = new GlideRecord('u_apm_profile_hierarchy');
				gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_subprocess=' + subprocess + '^u_functional_role=' + profile);
				gr.query();
				while (gr.next()) {
					var grSR = new GlideRecord('u_apm_segregations');
					grSR.addEncodedQuery('u_application=pws^u_codice_authorization_objects=' + gr.u_codice_authorization_objects);
					grSR.query();
					while (grSR.next()) {
						id.push(grSR.getUniqueValue());
					}
				}
			} else if ((application == 'edw') || (application == 'bcs') || (application == 'harmony') || (application == 'financial_portal') || (application == 'dms') || (application == 'ghrs')) {
				var appoArrayEdwBcs = [];
				var gr = new GlideRecord('u_apm_profile_hierarchy');
				gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
				if (application == 'ghrs') {
					gr.addQuery('u_cm_link_logic', type);
				}
				gr.query();
				while (gr.next()) {
					var grSR = new GlideRecord('u_apm_segregations');
					grSR.addEncodedQuery('u_application=' + application + '^u_codice_authorization_objects=' + gr.u_codice_authorization_objects);
					grSR.query();
					while (grSR.next()) {
						if (appoArrayEdwBcs.indexOf(grSR.getDisplayValue('u_value_name')) === -1) {
							appoArrayEdwBcs.push(grSR.getDisplayValue('u_value_name'));
							id.push(grSR.getUniqueValue());
						}
					}
				}
				//gs.info('test_m_ pd 181 '+area +' '+typeof area);
				if (application == 'harmony' && area != 'AFC Local') {
					var grAst = new GlideRecord('u_apm_segregations');
					grAst.addEncodedQuery('u_application=harmony^u_value_name=*');
					grAst.query();
					if (grAst.next()) {
						id.unshift(grAst.getUniqueValue());
					}
				}
			} else if (application == 'sap') {
				var spAll = false;
				var typeTwo = gs.getProperty('APM-IP0_ApprovalsType2').split(",");
				var appoArray = [];
				var gr = new GlideAggregate('u_apm_profile_hierarchy');
				gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
				gr.addAggregate('COUNT', 'u_segregations');
				gr.query();
				while (gr.next()) {
					var grSR = new GlideRecord('u_apm_segregations');
					grSR.addEncodedQuery('u_application=sap^u_low=' + gr.u_segregations);
					grSR.query();
					while (grSR.next()) {
						if (appoArray.indexOf(grSR.getDisplayValue('u_value_name')) === -1) {
							appoArray.push(grSR.getDisplayValue('u_value_name'));
							id.push(grSR.getUniqueValue());
						}
					}
					var grCm = new GlideRecord('u_apm_profile_hierarchy');
					grCm.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile + '^u_segregations=' + gr.u_segregations);
					grCm.setLimit(1);
					grCm.query();
					var cmLL = grCm.next() ? grCm.getDisplayValue('u_cm_link_logic') : '';
					if (typeTwo.indexOf(cmLL) === -1 && cmLL != 'CORP_LOCAL') {
						spAll = true;
					}
				}
				if (spAll) {
					var grAst = new GlideRecord('u_apm_segregations');
					grAst.addEncodedQuery('u_application=sap^u_value_name=No specific segregation needed');
					grAst.query();
					if (grAst.next()) {
						id.unshift(grAst.getUniqueValue());
					}
				}
			} else if (application == 'spmat') {
				var gr = new GlideRecord('u_apm_profile_hierarchy');
				gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
				gr.query();
				while (gr.next()) {
					var segSplit = gr.u_codice_authorization_objects.split(',');
					var grSR = new GlideRecord('u_apm_segregations');
					if (apm_segregation_string == '') {
						grSR.addEncodedQuery('u_application=spmat^u_codice_authorization_objects=' + segSplit[0]);
					} else {
						grSR.addEncodedQuery('u_application=spmat^u_codice_authorization_objects=' + segSplit[1]);
					}
					grSR.query();
					while (grSR.next()) {
						id.push(grSR.getUniqueValue());
					}
				}
			} else if (application == 'sidac') {
				var grSR = new GlideRecord('u_apm_segregations');
				grSR.addEncodedQuery('u_application=' + application + '^u_value_code=' + apm_nation_segregation);
				grSR.query();
				while (grSR.next()) {
					id.push(grSR.getUniqueValue());
				}
				var grAst = new GlideRecord('u_apm_segregations');
				grAst.addEncodedQuery('u_application=sidac^u_value_name=*');
				grAst.query();
				if (grAst.next()) {
					id.unshift(grAst.getUniqueValue());
				}
			}

		} else {
			if (application == 'pws') {
				var grUser = new GlideRecord('sys_user');
				grUser.get(APM_requested_for);
				var grAP = new GlideRecord('u_apm_active_profiles');
				grAP.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_application=' + application);
				grAP.query();
				while (grAP.next()) {
					var grSR = new GlideRecord('u_apm_segregations');
					grSR.addEncodedQuery('u_application=' + application + '^u_value_code=' + grAP.u_codice_valore_authorization_objects);
					grSR.query();
					while (grSR.next()) {
						id.push(grSR.getUniqueValue());
					}
				}
			} else if (application == 'harmony') {
				var SapRemoveArray = [];
				var grUser = new GlideRecord('sys_user');
				grUser.get(APM_requested_for);
				var grAP = new GlideRecord('u_apm_active_profiles');
				grAP.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_application=' + application);
				grAP.query();
				while (grAP.next()) {
					var grSR = new GlideRecord('u_apm_segregations');
					grSR.addEncodedQuery('u_application=' + application + '^u_low=' + grAP.u_low);//+'^u_low='+grAP.u_segregations
					grSR.query();
					while (grSR.next()) {
						if (SapRemoveArray.indexOf(grSR.getDisplayValue('u_value_name')) === -1) {
							SapRemoveArray.push(grSR.getDisplayValue('u_value_name'));
							id.push(grSR.getUniqueValue());
						}
					}
				}
			} else if ((application == 'sap' || (application == 'edw') || (application == 'bcs') || (application == 'financial_portal'))) {
				var SapRemoveArray = [];
				var grUser = new GlideRecord('sys_user');
				grUser.get(APM_requested_for);
				var grAP = new GlideRecord('u_apm_active_profiles');
				grAP.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_application=' + application);
				grAP.query();
				while (grAP.next()) {
					var grSR = new GlideRecord('u_apm_segregations');
					grSR.addEncodedQuery('u_application=' + application + '^u_value_name=' + grAP.u_low);//+'^u_low='+grAP.u_segregations
					grSR.query();
					while (grSR.next()) {
						if (SapRemoveArray.indexOf(grSR.getDisplayValue('u_value_name')) === -1) {
							SapRemoveArray.push(grSR.getDisplayValue('u_value_name'));
							id.push(grSR.getUniqueValue());
						}
					}
				}
			} else if (application == 'sidac') {
				var grSR = new GlideRecord('u_apm_segregations');
				grSR.addEncodedQuery('u_application=' + application + '^u_value_code=' + apm_nation_segregation);
				grSR.query();
				while (grSR.next()) {
					id.push(grSR.getUniqueValue());

				}
			}
		}
		//gs.info('test_m_m '+application);
		return id;
	},

	getOffice: function (area, process, application, subprocess, profile, segregation) {
		//get Office reference qual. 	Lookup Select Box
		var id = [];
		var gr = new GlideRecord('u_apm_profile_hierarchy');
		var logic;
		var Aobj;
		//var segregationSelected= JSON.stringify(segregation).replace('"', '');
		var qrySTR = '';
		var replaced = [];
		var segrArr = [];
		segrArr = segregation.split(';');
		for (var n in segrArr) {
			replaced.push(segrArr[n].substring(segrArr[n].indexOf('|') - 1, segrArr[n].indexOf(';')));
		}
		gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_subprocess=' + subprocess + '^u_functional_role=' + profile);
		gr.query();
		//gs.info('test_m_ office '+segrArr+' replace '+ replaced+' segregationSelected '+segregationSelected);
		while (gr.next()) {
			if (gr.u_cm_approval == 1) {
				logic = gr.getDisplayValue('u_cm_link_logic');
				Aobj = gr.getDisplayValue('u_codice_authorization_objects');
				//if((logic!='-')&&(Aobj!='-')&&(logic!='CORP')){
				for (var i in replaced) {
					if (replaced[i] == replaced[0]) {
						qrySTR = 'u_codice_authorization_objects=' + Aobj + '^u_value_name=' + replaced[i];
					} else {
						qrySTR += '^ORu_value_name=' + replaced[i];
					}
				}
				var grSegr = new GlideRecord('u_apm_segregations');
				grSegr.addEncodedQuery(qrySTR);
				grSegr.query();
				//gs.info('test_m_ getoffice '+grSegr.getEncodedQuery());
				while (grSegr.next()) {
					var grPdac = new GlideRecord('u_apm_pd_ufficio_acquisti');
					grPdac.addEncodedQuery('u_application=pws^u_pd=' + grSegr.getDisplayValue('u_value_code'));
					grPdac.query();
					while (grPdac.next()) {
						id.push(grPdac.getUniqueValue());
						//}
					}
				}
			}
		}
		return id;
	},

	// ---------Lookup Select Box managment-------

	//--------- utils--------	
	segregationMandatory: function () {
		//check if segregation must be mandatory
		var ans = false;
		var area = this.getParameter('area');
		var process = this.getParameter('process');
		var application = this.getParameter('application');
		var subprocess = this.getParameter('subprocess');
		var profile = this.getParameter('profile');
		var action = this.getParameter('action');
		if (application == 'pws') {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_subprocess=' + subprocess + '^u_functional_role=' + profile);
			gr.query();
			if (gr.next()) {
				if (gr.getValue('u_cm_link_logic') == 'PD') {
					ans = true;
				}
			}
		} else if (application == 'sap') {
			if (action != 'delete') {
				ans = true;
				var typeOne = gs.getProperty('APM-IP0_ApprovalsType1').split(",");
				var gr = new GlideRecord('u_apm_profile_hierarchy');
				gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
				gr.query();
				if (gr.next()) {
					if (typeOne.indexOf(gr.getDisplayValue('u_cm_link_logic')) != -1) {
						ans = false;
					}
				}
			} else { ans = false; }
		} else if (application == 'harmony') {
			ans = area == 'AFC Corporate' || area == 'AFC Local';
			/*
	if(area == 'AFC Corporate' || area=='AFC Local'){
		ans = true;
	}else{
		ans = false;
	}
	*/
		} else if ((application == 'financial_portal') || (application == 'bcs') || (application == 'edw') || (application == 'spmat')) {
			ans = true;
		} else if (application == 'dms') {
			var grDMS = new GlideRecord('u_apm_profile_hierarchy');
			grDMS.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
			grDMS.query();
			if (grDMS.next()) {
				if (grDMS.getValue('u_codice_authorization_objects') == 'dmsCompanies') {
					ans = true;
				}
			}
		} else if ((application == 'sidac') || (application == 'ghrs')) {
			if (action == 'create') {
				ans = true;
			} else {
				ans = false;
			}
		}
		return ans;
	},

	AssignedAuto: function () {
		//auto populate cm_approve/dep without segregation
		var id = '';
		var logic;
		var Aobj;
		var area = this.getParameter('area');
		var process = this.getParameter('process');
		var application = this.getParameter('application');
		var subprocess = this.getParameter('subprocess');
		var profile = this.getParameter('profile');
		var user = this.getParameter('user');
		var type = this.getParameter('type');

		if (application == 'pws') {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_subprocess=' + subprocess + '^u_functional_role=' + profile); //+'^u_segregations='+segregation
			gr.query();
			while (gr.next()) {
				if (gr.u_cm_approval == 1) {
					logic = gr.u_cm_link_logic;
					Aobj = gr.u_codice_authorization_objects;
					if ((logic != '-') && (Aobj != '-') && (logic != 'CORP')) {
						// 					var grSegr= new GlideRecord('u_apm_segregations');
						// 					grSegr.addEncodedQuery('u_codice_authorization_objects='+Aobj);//+'^u_value_nameIN'+segregation
						// 					grSegr.query();
						// 					while(grSegr.next()){
						// 						var grPdac= new GlideRecord('u_apm_pd_ufficio_acquisti');
						// 						grPdac.addEncodedQuery('u_pd='+grSegr.u_value_code);
						// 						grPdac.setLimit(1);
						// 						grPdac.query();
						// 						if(grPdac.next()){
						// 							id=(grPdac.getValue('u_pd_manager')+',');
						// 						}
						id = '' + ',';
						//					}
					} else {
						var client_manager_full_name = gr.getValue('u_client_manager_full_name');
						var deputy_client_manager_full_name = gr.getValue('u_deputy_client_manager_full_name');

						var grDelegate = new GlideRecord('sys_user_delegate');
						grDelegate.addEncodedQuery('user=' + client_manager_full_name + '^delegate=' + deputy_client_manager_full_name + '^approvals=true^u_type=Delegate^u_active=true');

						grDelegate.query();
						if (grDelegate.next()) {
							id = client_manager_full_name + ',';
						} else {
							id = client_manager_full_name + ',' + deputy_client_manager_full_name;
						}

					}
				}
			}
		} else if ((application == 'sap') || (application == 'amos') || (application == 'edw') || (application == 'bcs')) {

			var typeOne = gs.getProperty('APM-IP0_ApprovalsType1').split(",");
			var typeTwo = gs.getProperty('APM-IP0_ApprovalsType2').split(",");
			var typeThree = gs.getProperty('APM-IP0_ApprovalsType3').split(",");

			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
			gr.query();
			while (gr.next()) {
				if (gr.u_cm_approval == 1) {


					if (typeOne.indexOf(gr.getDisplayValue('u_cm_link_logic')) !== -1) {

						var client_manager_full_name = gr.getValue('u_client_manager_full_name');
						var deputy_client_manager_full_name = gr.getValue('u_deputy_client_manager_full_name');
						var grDelegate = new GlideRecord('sys_user_delegate');
						grDelegate.addEncodedQuery('user=' + client_manager_full_name + '^delegate=' + deputy_client_manager_full_name + '^approvals=true^u_type=Delegate^u_active=true');
						grDelegate.query();
						if (grDelegate.next()) {
							id = client_manager_full_name + ',';
						} else {
							id = client_manager_full_name + ',' + deputy_client_manager_full_name;
						}
					}
					if (typeTwo.indexOf(gr.getDisplayValue('u_cm_link_logic')) !== -1) {

						id = '' + ',';
					}
					if (typeThree.indexOf(gr.getDisplayValue('u_cm_link_logic')) !== -1) {

						var grUser = new GlideRecord("sys_user");
						grUser.addEncodedQuery('sys_id=' + user);
						grUser.query();
						if (grUser.next()) {
							id = grUser.getValue('manager') + ',';
						}

					}
				}
			}
		} else if ((application == 'harmony') || (application == 'financial_portal') || (application == 'ghrs') || (application == 'sidac')) {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addQuery('u_area', area);
			gr.addQuery('u_application', application);
			gr.addQuery('u_functional_role', profile);
			//! se application è ghrs allora aggiungo la query per il campo u_cm_link_logic
			application == 'ghrs' ? gr.addQuery('u_cm_link_logic', type) : '';
			//gr.addEncodedQuery('u_area=' + area + '^u_application=' + application + '^u_functional_role=' + profile);
			gr.query();
			while (gr.next()) {
				if (gr.u_cm_approval == 1) {
					var client_manager_full_name = gr.getValue('u_client_manager_full_name');
					var deputy_client_manager_full_name = gr.getValue('u_deputy_client_manager_full_name');
					var grDelegate = new GlideRecord('sys_user_delegate');
					grDelegate.addEncodedQuery('user=' + client_manager_full_name + '^delegate=' + deputy_client_manager_full_name + '^approvals=true^u_type=Delegate^u_active=true');
					grDelegate.query();
					if (grDelegate.next()) {
						id = client_manager_full_name + ',';
					} else {
						id = client_manager_full_name + ',' + deputy_client_manager_full_name;
					}
				}
			}
		} else if (application == 'dms') {
			var grDMS = new GlideRecord('u_apm_profile_hierarchy');
			grDMS.addEncodedQuery('u_area=' + area + '^u_application=' + application + '^u_functional_role=' + profile);
			grDMS.query();
			while (grDMS.next()) {
				if (grDMS.u_cm_approval == 1 && grDMS.u_codice_authorization_objects != 'dmsCompanies') {
					var client_manager_full_name = grDMS.getValue('u_client_manager_full_name');
					var deputy_client_manager_full_name = grDMS.getValue('u_deputy_client_manager_full_name');
					id = client_manager_full_name + ',' + deputy_client_manager_full_name;
				}
				if (grDMS.u_cm_approval == 1 && grDMS.u_codice_authorization_objects == '') {
					var client_manager_full_nameD = gs.getProperty('(APM) Application DMS CM assignment');
					var deputy_client_manager_full_nameD = gs.getProperty('(APM) Application DMS CM Deputy assignment');
					id = client_manager_full_nameD + ',' + deputy_client_manager_full_nameD;
				}
			}
		}

		//gs.info('test_m no_segr '+id);
		return id;
	},

	AssignedAutoSegr: function () {
		//auto populate cm_approve/dep with segregation
		var id = '';
		var logic;
		var Aobj;
		var area = this.getParameter('area');
		var process = this.getParameter('process');
		var application = this.getParameter('application');
		var subprocess = this.getParameter('subprocess');
		var profile = this.getParameter('profile');
		var segregation = this.getParameter('segregation');
		var user = this.getParameter('user');
		var type = this.getParameter('type');

		if (application == 'pws') {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_subprocess=' + subprocess + '^u_functional_role=' + profile); //+'^u_segregations='+segregation
			gr.query();
			while (gr.next()) {
				if (gr.u_cm_approval == 1) {
					logic = gr.u_cm_link_logic;
					Aobj = gr.u_codice_authorization_objects;
					if ((logic != '-') && (Aobj != '-') && (logic != 'CORP')) {
						var grSegr = new GlideRecord('u_apm_segregations');
						grSegr.addEncodedQuery('u_codice_authorization_objects=' + Aobj + '^u_value_nameIN' + segregation);
						grSegr.query();
						//gs.info('test_m '+grSegr.getEncodedQuery());
						while (grSegr.next()) {
							var grPdac = new GlideRecord('u_apm_pd_ufficio_acquisti');
							grPdac.addEncodedQuery('u_application=pws^u_pd=' + grSegr.u_value_code);
							grPdac.setLimit(1);
							grPdac.query();
							if (grPdac.next()) {
								id = (grPdac.getValue('u_pd_manager')) + ',';
							} else {
								id = '' + ',';
							}
						}
					} else {
						var client_manager_full_name = gr.getValue('u_client_manager_full_name');
						var deputy_client_manager_full_name = gr.getValue('u_deputy_client_manager_full_name');

						var grDelegate = new GlideRecord('sys_user_delegate');
						grDelegate.addEncodedQuery('user=' + client_manager_full_name + '^delegate=' + deputy_client_manager_full_name + '^approvals=true^u_type=Delegate^u_active=true');
						grDelegate.query();
						if (grDelegate.next()) {
							id = client_manager_full_name + ',';
						} else {
							id = client_manager_full_name + ',' + deputy_client_manager_full_name;
						}

					}
				}
			}
		} else if (application == 'sap') {
			var typeTwo = gs.getProperty('APM-IP0_ApprovalsType2').split(",");
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile + '^u_low=' + segregation);
			gr.query();
			while (gr.next()) {
				if (typeTwo.indexOf(gr.getDisplayValue('u_cm_link_logic')) !== -1) {
					if (gr.u_cm_approval == 1) {

						var client_manager_full_name = gr.getValue('u_client_manager_full_name');
						var deputy_client_manager_full_name = gr.getValue('u_deputy_client_manager_full_name');
						var grDelegate = new GlideRecord('sys_user_delegate');
						grDelegate.addEncodedQuery('user=' + client_manager_full_name + '^delegate=' + deputy_client_manager_full_name + '^approvals=true^u_type=Delegate^u_active=true');
						grDelegate.query();
						if (grDelegate.next()) {
							id = client_manager_full_name + ',';
						} else {
							id = client_manager_full_name + ',' + deputy_client_manager_full_name;
						}
					}
				} else {
					break;
				}
			}
		} else if (application == 'dms') {
			var grPdacDMS = new GlideRecord('u_apm_pd_ufficio_acquisti');
			grPdacDMS.addEncodedQuery('u_application=dms^u_office_code=' + segregation);
			grPdacDMS.setLimit(1);
			grPdacDMS.query();
			if (grPdacDMS.next()) {
				if (grPdacDMS.u_second_approver == '') {
					id = (grPdacDMS.getValue('u_pd_manager')) + ',';
				} else {
					id = grPdacDMS.getValue('u_pd_manager') + ',' + grPdacDMS.getValue('u_second_approver');
				}
			}
		} else if (application == 'spmat') {
			var grUser = new GlideRecord("sys_user");
			grUser.addEncodedQuery('sys_id=' + user);
			grUser.query();
			if (grUser.next()) {
				id = grUser.getValue('manager') + ',';
			}
		} else if (application == 'ghrs') {
			var grHghrs = new GlideRecord('u_apm_profile_hierarchy');
			grHghrs.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile + '^u_segregations=' + segregation + '^u_cm_link_logic=' + type);
			grHghrs.setLimit(1);
			grHghrs.query();
			if (grHghrs.next()) {
				if (grHghrs.u_cm_approval == 1) {
					var client_manager_full_name = grHghrs.getValue('u_client_manager_full_name');
					var deputy_client_manager_full_name = grHghrs.getValue('u_deputy_client_manager_full_name');
					var grDelegate = new GlideRecord('sys_user_delegate');
					grDelegate.addEncodedQuery('user=' + client_manager_full_name + '^delegate=' + deputy_client_manager_full_name + '^approvals=true^u_type=Delegate^u_active=true');
					grDelegate.query();
					if (grDelegate.next()) {
						id = client_manager_full_name + ',';
					} else {
						id = client_manager_full_name + ',' + deputy_client_manager_full_name;
					}
				}
			}
		}
		return id;
	},

	setComments: function () {
		//set comment on reject for all the selected ritm
		var answer;
		var list = this.getParameter('list');
		var motiv = this.getParameter('motivation');
		var gr = new GlideRecord('sysapproval_approver');
		gr.addEncodedQuery('sys_idIN' + list);
		gr.query();
		//gs.info('test_m '+motiv);
		while (gr.next()) {
			gr.comments = motiv;
			gr.setValue('state', 'rejected');
			gr.update();
		}
		return answer = true;
	},

	ProfileDelete: function () {
		var Profile = '';
		var ActiveProfile = [];
		var profile = this.getParameter('user');
		var area = this.getParameter('area');
		var process = this.getParameter('process');
		var application = this.getParameter('application');
		var subprocess = this.getParameter('subprocess');


		//gs.info('test_m_ '+ActiveProfile+' '+Profile);
		return Profile;
	},

	SegregationPd: function () {
		//APM Populate Segregation : to populate segregation string field with one or more value
		var pd = '';
		var area = this.getParameter('area');
		var process = this.getParameter('process');
		var application = this.getParameter('application');
		var subprocess = this.getParameter('subprocess');
		var profile = this.getParameter('profile');
		if (application == 'pws') {
			var gr = new GlideRecord('u_apm_profile_hierarchy');
			gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_subprocess=' + subprocess + '^u_functional_role=' + profile);
			gr.query();
			//gs.info('test_m_ test '+gr.getEncodedQuery()+' '+gr.getDisplayValue('u_cm_link_logic'));
			while (gr.next()) {

				if ((gr.getDisplayValue('u_cm_link_logic') == 'PD') && (gr.getDisplayValue('u_cm_approval') == '1')) {
					pd = true;
				} else {
					pd = false;
				}
			}
		} else if (application == 'sap') {
			var typeTwo = gs.getProperty('APM-IP0_ApprovalsType2').split(",");
			var gr = new GlideAggregate('u_apm_profile_hierarchy');
			gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
			gr.addAggregate('COUNT', 'u_cm_link_logic');
			gr.query();
			while (gr.next()) {
				if (typeTwo.indexOf(gr.getValue('u_cm_link_logic')) == -1) {
					pd = false;
				} else {
					pd = true;
				}
			}
		} else if (application == 'edw' || application == 'bcs' || application == 'harmony' || application == 'financial_portal' || application == 'ghrs' || application == 'sidac') {
			pd = false;
		} else if (application == 'dms' || application == 'ghrs') {
			pd = true;
		}
		return pd;
	},

	autoOption: function () {
		var id;
		arraysprocess = [];
		var area = this.getParameter('area');
		var process = this.getParameter('process');
		var application = this.getParameter('application');

		var gr = new GlideRecord('u_apm_profile_hierarchy');
		gr.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application);
		gr.query();
		while (gr.next()) {
			if (arraysprocess.indexOf(gr.getDisplayValue('u_subprocess')) === -1) {
				id = id + ',' + gr.getDisplayValue('u_subprocess');
				arraysprocess.push(gr.getDisplayValue('u_subprocess'));
			}
		}
		//gs.info('test_m_'+id);
		return id;
	},

	alertSegregation: function () {
		//APM Alert Segregation : check if the segregation selected is alredy inserted for the user
		var ans = 'false';

		var profile = this.getParameter('profile');
		var userSysId = this.getParameter('userSysId');
		var area = this.getParameter('area');
		var profile = this.getParameter('profile');
		var process = this.getParameter('process');
		var application = this.getParameter('application');
		var segregtionSelected = this.getParameter('segregtionSelected');
		var application = this.getParameter('application');
		var grUser = new GlideRecord('sys_user');
		grUser.get(userSysId);


		if (application == 'pws') {
			var grSegregation = new GlideRecord('u_apm_segregations');
			grSegregation.addEncodedQuery('u_value_name=' + segregtionSelected);
			grSegregation.query();
			//gs.info('test_m '+grSegregation.getEncodedQuery());
			if (grSegregation.next()) {
				var gr = new GlideRecord('u_apm_active_profiles');
				gr.addEncodedQuery('u_codice_valore_authorization_objects=' + grSegregation.u_value_code + '^u_user_name=' + grUser.user_name + '^u_functional_role=' + profile);
				gr.query();
				if (gr.next()) {
					ans = 'true';
				}
			}
		}
		if (application == 'sap') {
			var grh = new GlideRecord('u_apm_profile_hierarchy');

			grh.addEncodedQuery('u_area=' + area + '^u_process=' + process + '^u_application=' + application + '^u_functional_role=' + profile);
			grh.query();
			if (grh.next()) {
				var grSegregation = new GlideRecord('u_apm_segregations');
				grSegregation.addEncodedQuery('u_value_name=' + segregtionSelected + '^u_low=' + grh.u_segregations);
				grSegregation.query();
				//gs.info('test_m '+grSegregation.getEncodedQuery());
				if (grSegregation.next()) {
					var gr = new GlideRecord('u_apm_active_profiles');
					gr.addEncodedQuery('u_segregation=' + grSegregation.u_low + '^u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_low=' + grSegregation.u_value_name);
					gr.query();
					// gs.info('test_m ' + gr.getEncodedQuery());
					if (gr.next()) {
						ans = 'true';
					}
				}
			}
		}
		if (application == 'edw' || application == 'bcs') {
			var gr = new GlideRecord('u_apm_active_profiles');
			//gs.info('test_m_m '+segregtionSelected);
			gr.addEncodedQuery('u_application=' + application + '^u_user_name=' + grUser.user_name + '^u_area=' + area + '^u_process=' + process + '^u_low=' + segregtionSelected);
			gr.query();
			if (gr.next()) {
				ans = 'true';
			}

		}

		if (application == 'harmony' || application == 'financial_portal') {
			segregtionSelected = (JSON.stringify(segregtionSelected)).replaceAll('"', '');
			var arrSplit = (segregtionSelected.replaceAll(' ', '')).split('|');
			var gr = new GlideRecord('u_apm_active_profiles');

			gr.addEncodedQuery('u_application=' + application + '^u_user_name=' + grUser.user_name + '^u_area=' + area);
			if (application == 'harmony') {
				gr.addQuery('u_low', arrSplit[1]);
			} else {
				gr.addQuery('u_low', arrSplit[0]);
			}
			gr.query();
			//gs.info('test_m_m '+ gr.getEncodedQuery());
			if (gr.next()) {
				ans = 'true';
			}

		}
		//gs.info('test_m '+ans);
		return ans;
	},

	alertRole: function () {
		try {
			//APM Alert Role /onSubmit Check Role & Segregation : check if the Role selected is alredy inserted for the user
			var ans = 'false';
			var profile = this.getParameter('profile');
			var userSysId = this.getParameter('userSysId');
			var application = this.getParameter('application');
			var grUser = new GlideRecord('sys_user');
			grUser.get(userSysId);

			if (application == 'pws') {
				var gr = new GlideRecord('u_apm_active_profiles');
				gr.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_codice_valore_authorization_objects=-');
				gr.query();
				if (gr.next()) {
					ans = 'true';
				}
			}
			if (application == 'sap') {
				var gr = new GlideRecord('u_apm_active_profiles');
				gr.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_segregation=-');
				gr.query();
				if (gr.next()) {
					ans = 'true';
				}
			}
			if (application == 'harmony' || application == 'financial_portal') {
				var gr = new GlideRecord('u_apm_active_profiles');
				gr.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_application=' + application + '^u_low=-');
				gr.query();
				if (gr.next()) {
					ans = 'true';
				}
			}
			if (application == 'edw' || application == 'bcs') {
				var gr = new GlideRecord('u_apm_active_profiles');
				gr.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_low=-');
				gr.query();
				if (gr.next()) {
					ans = 'true';
				}
			}
			if (application == 'amos') {

				//bypass control for amos 

				//var process = this.getParameter('process');
				// 			var myString = process.substring(process.indexOf('-')+1);
				//             var gr = new GlideRecord('u_apm_active_profiles');
				//             gr.addEncodedQuery('u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_division_description='+myString.trim()+'^u_application=amos');
				//             gr.query();
				// 			//gs.info('test_m sub'+gr.getEncodedQuery()+' '+ans);
				//             if (gr.next()) {
				ans = 'false';
				//             }
			}
			//gs.info('test_m sub '+ans);
			return ans;
		} catch (ex) {
			gs.info('test_m ' + ex.lineNumber + ' error ' + ex);
		}
	},


	alertSegregationSubmit: function () {
		//onSubmit Check Role & Segregation : check if the segregation selected is alredy inserted for the user
		var ans = 'false';

		var profile = this.getParameter('profile');
		var userSysId = this.getParameter('userSysId');
		var application = this.getParameter('application');
		var segregtionSelected = this.getParameter('segregtionSelected');
		segregtionSelected = JSON.stringify(segregtionSelected).replace('"', '');
		var grUser = new GlideRecord('sys_user');
		grUser.get(userSysId);
		var segregationReplaced = [];
		var segrArr = [];
		segrArr = segregtionSelected.split(';');

		if (application == 'pws' || application == 'edw' || application == 'bcs' || application == 'sap') {
			for (var n in segrArr) {
				segregationReplaced.push(segrArr[n].substring(segrArr[n].indexOf('|') - 1, segrArr[n].indexOf(';')));
			}
			//u_value_name=PIPE - CARBON STEEL GALVANIZED, SEAMLESS, FOR INSTRUMENTS AIR^ORu_value_name=f
			var qrySTR = '';
			for (var i in segregationReplaced) {
				if (segregationReplaced[i] == segregationReplaced[0]) {
					qrySTR = 'u_value_name=' + segregationReplaced[i];
				} else {
					qrySTR += '^ORu_value_name=' + segregationReplaced[i];
				}
			}

			var grSegregation = new GlideRecord('u_apm_segregations');
			grSegregation.addEncodedQuery(qrySTR);
			grSegregation.query();
			//gs.info('test_m seg '+grSegregation.getEncodedQuery());
			while (grSegregation.next()) {
				if (application == 'pws') {
					var gr = new GlideRecord('u_apm_active_profiles');
					gr.addEncodedQuery('u_codice_valore_authorization_objects=' + grSegregation.u_value_code + '^u_user_name=' + grUser.user_name + '^u_functional_role=' + profile);
					gr.query();
					if (gr.next()) {
						ans = 'true';
					}
				}
				if (application == 'sap') {
					var gr = new GlideRecord('u_apm_active_profiles');
					gr.addEncodedQuery('u_segregation=' + grSegregation.u_low + '^u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_low=' + grSegregation.u_value_name);
					gr.query();
					if (gr.next()) {
						ans = 'true';
					}
				}
				if (application == 'edw' || application == 'bcs') {
					var gr2 = new GlideRecord('u_apm_active_profiles');
					gr2.addEncodedQuery('u_segregation=' + grSegregation.u_codice_authorization_objects + '^u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^u_low=' + grSegregation.u_value_name);
					gr2.query();
					if (gr2.next()) {
						ans = 'true';
					}
				}
			}
		}
		if (application == 'harmony' || application == 'financial_portal') {
			for (var n in segrArr) {
				if (application == 'harmony') {
					//gs.info('test_m_m 11');
					segregationReplaced.push(segrArr[n].substring(segrArr[n].indexOf('|') + 2, segrArr[n].lastIndexOf('|') - 1));
					//segregationReplaced.push(segrArr[n].substring(0, segrArr[n].indexOf('|')-1));
				} else {
					segregationReplaced.push(segrArr[n].substring(0, segrArr[n].indexOf('|') - 1));
				}
			}
			//u_functional_role=Chief Accountant^u_low=0128^ORu_low=0031^u_user_name=SACOB000090
			var qrySTR = '';
			for (var z in segregationReplaced) {
				if (segregationReplaced[z] == segregationReplaced[0]) {
					qrySTR = 'u_low=' + segregationReplaced[z];
				} else {
					qrySTR += '^ORu_low=' + segregationReplaced[z];
				}
			}

			var grHF = new GlideRecord('u_apm_active_profiles');

			grHF.addEncodedQuery('u_application=' + application + '^u_user_name=' + grUser.user_name + '^u_functional_role=' + profile + '^' + qrySTR);
			grHF.query();
			//gs.info('test_m_m '+ grHF.getEncodedQuery());
			if (grHF.next()) {
				ans = 'true';
			}

		}
		return ans;
	},

	RemoveAllFunc: function () {
		//APM onChange Remove for : check if the user can remove a role with Remove All function or not
		var ans;
		var user = this.getParameter('removal_user');

		var gr_Profile = new GlideAggregate('u_apm_active_profiles');
		gr_Profile.addAggregate('COUNT');
		gr_Profile.addQuery('u_application', 'pws');
		gr_Profile.addQuery('u_user_name', user);
		gr_Profile.addQuery('u_remove_all_func', '1');
		gr_Profile.query();
		if (gr_Profile.next()) {
			if (gr_Profile.getAggregate('COUNT') >= 1) {
				//gs.info('test_m '+gr_Profile.getAggregate('COUNT'));
				ans = true;
			}
		}
		return ans;
	},

	AssignedAutoRemoveFor: function () {
		//APM Remove All Assigned : set cm_approve for the remove function
		var ans;
		var approver = gs.getProperty('(APM) Remove All Approver UserId');
		var grProfile = new GlideRecord('sys_user');
		grProfile.addEncodedQuery('user_name=' + approver);
		grProfile.query();
		if (grProfile.next()) {
			ans = grProfile.getUniqueValue();
		}

		return ans;
	},


	checkApprover: function () {
		//RITM0532242 check if cm_approval is empty
		var ans = '';
		var area = this.getParameter('area');
		var apm_process = this.getParameter('process');
		var application = this.getParameter('application');
		var apm_subprocess = this.getParameter('subprocess');
		var userSysId = this.getParameter('userSysId');
		var profile = this.getParameter('profile');

		var grh = new GlideRecord('u_apm_profile_hierarchy');

		grh.addEncodedQuery('u_area=' + area + '^u_process=' + apm_process + '^u_application=' + application + '^u_subprocess=' + apm_subprocess + '^u_functional_role=' + profile);
		grh.query();
		if (grh.next()) {
			if (grh.u_cm_approval == '0') {
				var grProfile = new GlideRecord('sys_user');
				if (grProfile.get(userSysId)) {
					if (grProfile.getValue('manager')) {
						ans = grProfile.getValue('manager');
					} else {
						ans = 'false';
					}
				}
			}
			if (grh.u_cm_approval == '1') {
				ans = 'false';
			}
		}
		return ans;
	},

	findAmosUser: function () {
		//Filling AMOS User field
		var ans = '';
		var profile = this.getParameter('user');
		var grProfile = new GlideRecord('sys_user');
		if (grProfile.get(profile)) {
			var grA = new GlideRecord('u_apm_active_profiles');
			grA.addEncodedQuery('u_applicationINamos^u_user_name=' + grProfile.getDisplayValue('user_name'));
			grA.query();
			if (grA.next()) {
				ans = grA.getDisplayValue('u_amos_user');
			}
		}
		return ans;
	},

	dmsAlert: function () {
		//Alert for DMS application (if account or document alert for specify segregation in note field)

		var ans = '';
		var area = this.getParameter('area');
		var apm_process = this.getParameter('process');
		var profile = this.getParameter('profile');
		var grh = new GlideRecord('u_apm_profile_hierarchy');
		grh.addEncodedQuery('u_area=' + area + '^u_process=' + apm_process + '^u_application=dms^u_functional_role=' + profile);
		grh.query();
		//gs.info('test_m_m '+grh.getEncodedQuery());
		if (grh.next()) {
			//dmsAccount dmsDocuments
			//gs.info('test_m_m '+grh.getEncodedQuery()+' t '+grh.u_codice_authorization_objects);
			if ((grh.u_codice_authorization_objects == 'dmsAccount') || (grh.u_codice_authorization_objects == 'dmsDocuments')) {
				ans = gs.getMessage('(APM) DMS-segregation note field');
			}
		}
		return ans;
	},
	type: 'APMProfileManagement'
});